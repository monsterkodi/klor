// monsterkodi/kode 0.234.0

var _k_ = {kolor: { f:(r,g,b)=>'\x1b[38;5;'+(16+36*r+6*g+b)+'m', F:(r,g,b)=>'\x1b[48;5;'+(16+36*r+6*g+b)+'m', r:(i)=>(i<6)&&_k_.kolor.f(i,0,0)||_k_.kolor.f(5,i-5,i-5), R:(i)=>(i<6)&&_k_.kolor.F(i,0,0)||_k_.kolor.F(5,i-5,i-5), g:(i)=>(i<6)&&_k_.kolor.f(0,i,0)||_k_.kolor.f(i-5,5,i-5), G:(i)=>(i<6)&&_k_.kolor.F(0,i,0)||_k_.kolor.F(i-5,5,i-5), b:(i)=>(i<6)&&_k_.kolor.f(0,0,i)||_k_.kolor.f(i-5,i-5,5), B:(i)=>(i<6)&&_k_.kolor.F(0,0,i)||_k_.kolor.F(i-5,i-5,5), y:(i)=>(i<6)&&_k_.kolor.f(i,i,0)||_k_.kolor.f(5,5,i-5), Y:(i)=>(i<6)&&_k_.kolor.F(i,i,0)||_k_.kolor.F(5,5,i-5), m:(i)=>(i<6)&&_k_.kolor.f(i,0,i)||_k_.kolor.f(5,i-5,5), M:(i)=>(i<6)&&_k_.kolor.F(i,0,i)||_k_.kolor.F(5,i-5,5), c:(i)=>(i<6)&&_k_.kolor.f(0,i,i)||_k_.kolor.f(i-5,5,5), C:(i)=>(i<6)&&_k_.kolor.F(0,i,i)||_k_.kolor.F(i-5,5,5), w:(i)=>'\x1b[38;5;'+(232+(i-1)*3)+'m', W:(i)=>'\x1b[48;5;'+(232+(i-1)*3+2)+'m', wrap: function (open, close, reg) { return function (s) { return open + (~(s += '').indexOf(close,4) && s.replace(reg,open) || s) + close } }, F256: function (open) { return _k_.kolor.wrap(open,'\x1b[39m',new RegExp('\\x1b\\[39m','g')) }, B256: function (open) { return _k_.kolor.wrap(open,'\x1b[49m',new RegExp('\\x1b\\[49m','g')) }}, list: function (l) {return l != null ? typeof l.length === 'number' ? l : [] : []}, in: function (a,l) {return (typeof l === 'string' && typeof a === 'string' && a.length ? '' : []).indexOf.call(l,a) >= 0}};_k_.r1=_k_.kolor.F256(_k_.kolor.r(1));_k_.R1=_k_.kolor.B256(_k_.kolor.R(1));_k_.Rr1=s=>_k_.R1(_k_.r8(s));_k_.r2=_k_.kolor.F256(_k_.kolor.r(2));_k_.R2=_k_.kolor.B256(_k_.kolor.R(2));_k_.Rr2=s=>_k_.R2(_k_.r7(s));_k_.r3=_k_.kolor.F256(_k_.kolor.r(3));_k_.R3=_k_.kolor.B256(_k_.kolor.R(3));_k_.Rr3=s=>_k_.R3(_k_.r6(s));_k_.r4=_k_.kolor.F256(_k_.kolor.r(4));_k_.R4=_k_.kolor.B256(_k_.kolor.R(4));_k_.Rr4=s=>_k_.R4(_k_.r5(s));_k_.r5=_k_.kolor.F256(_k_.kolor.r(5));_k_.R5=_k_.kolor.B256(_k_.kolor.R(5));_k_.Rr5=s=>_k_.R5(_k_.r4(s));_k_.r6=_k_.kolor.F256(_k_.kolor.r(6));_k_.R6=_k_.kolor.B256(_k_.kolor.R(6));_k_.Rr6=s=>_k_.R6(_k_.r3(s));_k_.r7=_k_.kolor.F256(_k_.kolor.r(7));_k_.R7=_k_.kolor.B256(_k_.kolor.R(7));_k_.Rr7=s=>_k_.R7(_k_.r2(s));_k_.r8=_k_.kolor.F256(_k_.kolor.r(8));_k_.R8=_k_.kolor.B256(_k_.kolor.R(8));_k_.Rr8=s=>_k_.R8(_k_.r1(s));_k_.g1=_k_.kolor.F256(_k_.kolor.g(1));_k_.G1=_k_.kolor.B256(_k_.kolor.G(1));_k_.Gg1=s=>_k_.G1(_k_.g8(s));_k_.g2=_k_.kolor.F256(_k_.kolor.g(2));_k_.G2=_k_.kolor.B256(_k_.kolor.G(2));_k_.Gg2=s=>_k_.G2(_k_.g7(s));_k_.g3=_k_.kolor.F256(_k_.kolor.g(3));_k_.G3=_k_.kolor.B256(_k_.kolor.G(3));_k_.Gg3=s=>_k_.G3(_k_.g6(s));_k_.g4=_k_.kolor.F256(_k_.kolor.g(4));_k_.G4=_k_.kolor.B256(_k_.kolor.G(4));_k_.Gg4=s=>_k_.G4(_k_.g5(s));_k_.g5=_k_.kolor.F256(_k_.kolor.g(5));_k_.G5=_k_.kolor.B256(_k_.kolor.G(5));_k_.Gg5=s=>_k_.G5(_k_.g4(s));_k_.g6=_k_.kolor.F256(_k_.kolor.g(6));_k_.G6=_k_.kolor.B256(_k_.kolor.G(6));_k_.Gg6=s=>_k_.G6(_k_.g3(s));_k_.g7=_k_.kolor.F256(_k_.kolor.g(7));_k_.G7=_k_.kolor.B256(_k_.kolor.G(7));_k_.Gg7=s=>_k_.G7(_k_.g2(s));_k_.g8=_k_.kolor.F256(_k_.kolor.g(8));_k_.G8=_k_.kolor.B256(_k_.kolor.G(8));_k_.Gg8=s=>_k_.G8(_k_.g1(s));_k_.b1=_k_.kolor.F256(_k_.kolor.b(1));_k_.B1=_k_.kolor.B256(_k_.kolor.B(1));_k_.Bb1=s=>_k_.B1(_k_.b8(s));_k_.b2=_k_.kolor.F256(_k_.kolor.b(2));_k_.B2=_k_.kolor.B256(_k_.kolor.B(2));_k_.Bb2=s=>_k_.B2(_k_.b7(s));_k_.b3=_k_.kolor.F256(_k_.kolor.b(3));_k_.B3=_k_.kolor.B256(_k_.kolor.B(3));_k_.Bb3=s=>_k_.B3(_k_.b6(s));_k_.b4=_k_.kolor.F256(_k_.kolor.b(4));_k_.B4=_k_.kolor.B256(_k_.kolor.B(4));_k_.Bb4=s=>_k_.B4(_k_.b5(s));_k_.b5=_k_.kolor.F256(_k_.kolor.b(5));_k_.B5=_k_.kolor.B256(_k_.kolor.B(5));_k_.Bb5=s=>_k_.B5(_k_.b4(s));_k_.b6=_k_.kolor.F256(_k_.kolor.b(6));_k_.B6=_k_.kolor.B256(_k_.kolor.B(6));_k_.Bb6=s=>_k_.B6(_k_.b3(s));_k_.b7=_k_.kolor.F256(_k_.kolor.b(7));_k_.B7=_k_.kolor.B256(_k_.kolor.B(7));_k_.Bb7=s=>_k_.B7(_k_.b2(s));_k_.b8=_k_.kolor.F256(_k_.kolor.b(8));_k_.B8=_k_.kolor.B256(_k_.kolor.B(8));_k_.Bb8=s=>_k_.B8(_k_.b1(s));_k_.c1=_k_.kolor.F256(_k_.kolor.c(1));_k_.C1=_k_.kolor.B256(_k_.kolor.C(1));_k_.Cc1=s=>_k_.C1(_k_.c8(s));_k_.c2=_k_.kolor.F256(_k_.kolor.c(2));_k_.C2=_k_.kolor.B256(_k_.kolor.C(2));_k_.Cc2=s=>_k_.C2(_k_.c7(s));_k_.c3=_k_.kolor.F256(_k_.kolor.c(3));_k_.C3=_k_.kolor.B256(_k_.kolor.C(3));_k_.Cc3=s=>_k_.C3(_k_.c6(s));_k_.c4=_k_.kolor.F256(_k_.kolor.c(4));_k_.C4=_k_.kolor.B256(_k_.kolor.C(4));_k_.Cc4=s=>_k_.C4(_k_.c5(s));_k_.c5=_k_.kolor.F256(_k_.kolor.c(5));_k_.C5=_k_.kolor.B256(_k_.kolor.C(5));_k_.Cc5=s=>_k_.C5(_k_.c4(s));_k_.c6=_k_.kolor.F256(_k_.kolor.c(6));_k_.C6=_k_.kolor.B256(_k_.kolor.C(6));_k_.Cc6=s=>_k_.C6(_k_.c3(s));_k_.c7=_k_.kolor.F256(_k_.kolor.c(7));_k_.C7=_k_.kolor.B256(_k_.kolor.C(7));_k_.Cc7=s=>_k_.C7(_k_.c2(s));_k_.c8=_k_.kolor.F256(_k_.kolor.c(8));_k_.C8=_k_.kolor.B256(_k_.kolor.C(8));_k_.Cc8=s=>_k_.C8(_k_.c1(s));_k_.m1=_k_.kolor.F256(_k_.kolor.m(1));_k_.M1=_k_.kolor.B256(_k_.kolor.M(1));_k_.Mm1=s=>_k_.M1(_k_.m8(s));_k_.m2=_k_.kolor.F256(_k_.kolor.m(2));_k_.M2=_k_.kolor.B256(_k_.kolor.M(2));_k_.Mm2=s=>_k_.M2(_k_.m7(s));_k_.m3=_k_.kolor.F256(_k_.kolor.m(3));_k_.M3=_k_.kolor.B256(_k_.kolor.M(3));_k_.Mm3=s=>_k_.M3(_k_.m6(s));_k_.m4=_k_.kolor.F256(_k_.kolor.m(4));_k_.M4=_k_.kolor.B256(_k_.kolor.M(4));_k_.Mm4=s=>_k_.M4(_k_.m5(s));_k_.m5=_k_.kolor.F256(_k_.kolor.m(5));_k_.M5=_k_.kolor.B256(_k_.kolor.M(5));_k_.Mm5=s=>_k_.M5(_k_.m4(s));_k_.m6=_k_.kolor.F256(_k_.kolor.m(6));_k_.M6=_k_.kolor.B256(_k_.kolor.M(6));_k_.Mm6=s=>_k_.M6(_k_.m3(s));_k_.m7=_k_.kolor.F256(_k_.kolor.m(7));_k_.M7=_k_.kolor.B256(_k_.kolor.M(7));_k_.Mm7=s=>_k_.M7(_k_.m2(s));_k_.m8=_k_.kolor.F256(_k_.kolor.m(8));_k_.M8=_k_.kolor.B256(_k_.kolor.M(8));_k_.Mm8=s=>_k_.M8(_k_.m1(s));_k_.y1=_k_.kolor.F256(_k_.kolor.y(1));_k_.Y1=_k_.kolor.B256(_k_.kolor.Y(1));_k_.Yy1=s=>_k_.Y1(_k_.y8(s));_k_.y2=_k_.kolor.F256(_k_.kolor.y(2));_k_.Y2=_k_.kolor.B256(_k_.kolor.Y(2));_k_.Yy2=s=>_k_.Y2(_k_.y7(s));_k_.y3=_k_.kolor.F256(_k_.kolor.y(3));_k_.Y3=_k_.kolor.B256(_k_.kolor.Y(3));_k_.Yy3=s=>_k_.Y3(_k_.y6(s));_k_.y4=_k_.kolor.F256(_k_.kolor.y(4));_k_.Y4=_k_.kolor.B256(_k_.kolor.Y(4));_k_.Yy4=s=>_k_.Y4(_k_.y5(s));_k_.y5=_k_.kolor.F256(_k_.kolor.y(5));_k_.Y5=_k_.kolor.B256(_k_.kolor.Y(5));_k_.Yy5=s=>_k_.Y5(_k_.y4(s));_k_.y6=_k_.kolor.F256(_k_.kolor.y(6));_k_.Y6=_k_.kolor.B256(_k_.kolor.Y(6));_k_.Yy6=s=>_k_.Y6(_k_.y3(s));_k_.y7=_k_.kolor.F256(_k_.kolor.y(7));_k_.Y7=_k_.kolor.B256(_k_.kolor.Y(7));_k_.Yy7=s=>_k_.Y7(_k_.y2(s));_k_.y8=_k_.kolor.F256(_k_.kolor.y(8));_k_.Y8=_k_.kolor.B256(_k_.kolor.Y(8));_k_.Yy8=s=>_k_.Y8(_k_.y1(s));_k_.w1=_k_.kolor.F256(_k_.kolor.w(1));_k_.W1=_k_.kolor.B256(_k_.kolor.W(1));_k_.Ww1=s=>_k_.W1(_k_.w8(s));_k_.w2=_k_.kolor.F256(_k_.kolor.w(2));_k_.W2=_k_.kolor.B256(_k_.kolor.W(2));_k_.Ww2=s=>_k_.W2(_k_.w7(s));_k_.w3=_k_.kolor.F256(_k_.kolor.w(3));_k_.W3=_k_.kolor.B256(_k_.kolor.W(3));_k_.Ww3=s=>_k_.W3(_k_.w6(s));_k_.w4=_k_.kolor.F256(_k_.kolor.w(4));_k_.W4=_k_.kolor.B256(_k_.kolor.W(4));_k_.Ww4=s=>_k_.W4(_k_.w5(s));_k_.w5=_k_.kolor.F256(_k_.kolor.w(5));_k_.W5=_k_.kolor.B256(_k_.kolor.W(5));_k_.Ww5=s=>_k_.W5(_k_.w4(s));_k_.w6=_k_.kolor.F256(_k_.kolor.w(6));_k_.W6=_k_.kolor.B256(_k_.kolor.W(6));_k_.Ww6=s=>_k_.W6(_k_.w3(s));_k_.w7=_k_.kolor.F256(_k_.kolor.w(7));_k_.W7=_k_.kolor.B256(_k_.kolor.W(7));_k_.Ww7=s=>_k_.W7(_k_.w2(s));_k_.w8=_k_.kolor.F256(_k_.kolor.w(8));_k_.W8=_k_.kolor.B256(_k_.kolor.W(8));_k_.Ww8=s=>_k_.W8(_k_.w1(s))

var ext, exts, fs, json, jsonFile, keywords, lang, names, noon_load, noonFile, path, value, word, words, _25_18_

fs = require('fs')
noon_load = require('noon/js/load')
path = require('path')
noonFile = path.join(__dirname,'lang.noon')
jsonFile = path.join(__dirname,'..','js','lang.json')
console.log(_k_.Gg3(' compile: ') + _k_.g3(noonFile))
console.log(_k_.Gg2(' output: ') + _k_.g2(jsonFile))
lang = {}
exts = ['txt','log']
for (names in noon_load(noonFile))
{
    keywords = noon_load(noonFile)[names]
    var list = _k_.list(names.split(/\s/))
    for (var _23_12_ = 0; _23_12_ < list.length; _23_12_++)
    {
        ext = list[_23_12_]
        if (!(_k_.in(ext,exts)))
        {
            exts.push(ext)
        }
        lang[ext] = ((_25_18_=lang[ext]) != null ? _25_18_ : {})
        for (value in keywords)
        {
            words = keywords[value]
            var list1 = _k_.list(words)
            for (var _27_21_ = 0; _27_21_ < list1.length; _27_21_++)
            {
                word = list1[_27_21_]
                lang[ext][word] = value
            }
        }
    }
}
json = JSON.stringify({exts:exts,lang:lang},null,'    ')
fs.writeFileSync(jsonFile,json,'utf8')
_k_.Gg1(' ok ')
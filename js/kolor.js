// koffee 0.56.0

/*
000   000   0000000   000       0000000   00000000 
000  000   000   000  000      000   000  000   000
0000000    000   000  000      000   000  0000000  
000  000   000   000  000      000   000  000   000
000   000   0000000   0000000   0000000   000   000
 */
var B, B256, BG_COLORS, C, F, F256, FG_COLORS, G, M, R, STRIPANSI, W, Y, b, bg, bold, c, f, fg, g, i, init, j, k, l, len, len1, len2, len3, m, o, p, q, r, reset, s, t, w, wrap, y;

exports.map = {
    'punct': 'w3',
    'punct this': 'b3',
    'punct comment': 'w1',
    'punct comment triple': 'w1',
    'punct semver': 'r2',
    'punct regexp': 'm2',
    'punct regexp start': 'm8',
    'punct regexp end': 'm8',
    'punct regexp triple': 'm2',
    'punct escape regexp': 'm1',
    'punct escape regexp triple': 'm1',
    'punct string single': 'g1',
    'punct string single triple': 'g1',
    'punct string double': 'g1',
    'punct string double triple': 'g1',
    'punct string interpolation start': 'g1',
    'punct string interpolation end': 'g1',
    'punct number float': 'r3',
    'punct method': 'r2',
    'punct dictionary': 'y1',
    'punct property': 'y1',
    'punct range': 'b4',
    'punct code': 'b1',
    'punct code triple': 'b1',
    'punct meta': 'g1',
    'punct bold': 'y1',
    'punct italic': 'm1',
    'punct url': 'b1',
    'punct url tld': 'b1',
    'punct coffee': 'y1',
    'punct dir': 'g1',
    'punct js': 'm1',
    'punct git': 'w1',
    'punct li1': 'g1',
    'punct li2': 'g1',
    'punct li3': 'g1',
    'punct li1 marker': 'g4',
    'punct li2 marker': 'g3',
    'punct li3 marker': 'g2',
    'punct class': 'y2',
    'punct method class': 'y2',
    'punct keyword': 'b6',
    'punct function': 'r1',
    'punct function call': 'r2',
    'punct function tail': ['b6', 'bold', 'B1'],
    'punct function head': ['b6', 'bold', 'B1'],
    'punct function bound tail': ['r5', 'bold', 'R1'],
    'punct function bound head': ['r5', 'bold', 'R1'],
    'punct h1': 'y1',
    'punct h2': 'r1',
    'punct h3': 'b3',
    'punct h4': 'b2',
    'punct h5': 'b1',
    'text': 'w8',
    'text h1': 'y4',
    'text h2': 'r4',
    'text h3': 'b8',
    'text h4': 'b6',
    'text h5': 'b5',
    'text li1': 'g4',
    'text li2': 'g2',
    'text li3': 'g1',
    'text dir': 'g4',
    'text file': 'g6',
    'text this': 'b8',
    'text bold': 'y7',
    'text code': 'b8',
    'text italic': ['m7', 'italic'],
    'text regexp': 'm6',
    'text regexp triple': 'm6',
    'string single': 'g3',
    'string double': 'g4',
    'string single triple': 'g3',
    'string double triple': 'g4',
    'nil': 'm2',
    'obj': 'y5',
    'define': 'w3',
    'require': 'w3',
    'doctype': 'b8',
    'number': 'b7',
    'number hex': 'c3',
    'number float': 'r7',
    'semver': 'r5',
    'module': 'y6',
    'module this': 'y2',
    'meta': 'g4',
    'class': 'y5',
    'method': 'r6',
    'method class': 'y7',
    'function': 'r4',
    'function call': 'r5',
    'function call this': 'r2',
    'keyword': 'b8',
    'keyword function': 'w2',
    'keyword type': 'm4',
    'keyword html': 'b8',
    'keyword svg': 'b8',
    'property': 'y6',
    'property color': 'm4',
    'property special': 'm4',
    'dictionary key': 'y8',
    'argument': 'c3',
    'url protocol': 'b2',
    'url domain': 'b8',
    'url tld': 'b4',
    'coffee file': 'y4',
    'coffee ext': 'y1',
    'js file': 'm4',
    'js ext': 'm2',
    'git file': 'w8',
    'git ext': 'w2',
    'important': 'w4',
    'comment': 'w3',
    'comment triple': 'w4',
    'comment header': ['g1', 'G1'],
    'comment triple header': ['g2', 'G2']
};

f = function(r, g, b) {
    return '\x1b[38;5;' + (16 + 36 * r + 6 * g + b) + 'm';
};

F = function(r, g, b) {
    return '\x1b[48;5;' + (16 + 36 * r + 6 * g + b) + 'm';
};

r = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f(i, 0, 0) || f(5, i - 5, i - 5);
};

R = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && F(i, 0, 0) || F(5, i - 5, i - 5);
};

g = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f(0, i, 0) || f(i - 5, 5, i - 5);
};

G = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && F(0, i, 0) || F(i - 5, 5, i - 5);
};

b = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f(0, 0, i) || f(i - 5, i - 5, 5);
};

B = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && F(0, 0, i) || F(i - 5, i - 5, 5);
};

y = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f(i, i, 0) || f(5, 5, i - 5);
};

Y = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && F(i, i, 0) || F(5, 5, i - 5);
};

m = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f(i, 0, i) || f(5, i - 5, 5);
};

M = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && F(i, 0, i) || F(5, i - 5, 5);
};

c = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f(0, i, i) || f(i - 5, 5, 5);
};

C = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && F(0, i, i) || F(i - 5, 5, 5);
};

w = function(i) {
    if (i == null) {
        i = 4;
    }
    return '\x1b[38;5;' + (232 + (i - 1) * 3) + 'm';
};

W = function(i) {
    if (i == null) {
        i = 4;
    }
    return '\x1b[48;5;' + (232 + (i - 1) * 3 + 2) + 'm';
};

FG_COLORS = ['r', 'g', 'b', 'c', 'm', 'y', 'w'];

BG_COLORS = ['R', 'M', 'B', 'Y', 'G', 'C', 'W'];

wrap = function(open, close, searchRegex, replaceValue) {
    return function(s) {
        return open + (~(s += "").indexOf(close, 4) && s.replace(searchRegex, replaceValue) || s) + close;
    };
};

init = function(open, close) {
    return wrap("\x1b[" + open + "m", "\x1b[" + close + "m", new RegExp("\\x1b\\[" + close + "m", "g"), "\x1b[" + open + "m");
};

F256 = function(open) {
    return wrap(open, "\x1b[39m", new RegExp("\\x1b\\[39m", "g"), open);
};

B256 = function(open) {
    return wrap(open, "\x1b[49m", new RegExp("\\x1b\\[49m", "g"), open);
};

exports.bold = wrap("\x1b[1m", "\x1b[22m", /\x1b\[22m/g, "\x1b[22m\x1b[1m");

exports.dim = wrap("\x1b[2m", "\x1b[22m", /\x1b\[22m/g, "\x1b[22m\x1b[2m");

exports.reset = init(0, 0);

exports.italic = init(3, 23);

exports.underline = init(4, 24);

exports.inverse = init(7, 27);

exports.hidden = init(8, 28);

exports.black = init(30, 39);

exports.red = init(31, 39);

exports.green = init(32, 39);

exports.yellow = init(33, 39);

exports.blue = init(34, 39);

exports.magenta = init(35, 39);

exports.cyan = init(36, 39);

exports.white = init(37, 39);

exports.gray = init(90, 39);

for (j = 0, len = BG_COLORS.length; j < len; j++) {
    bg = BG_COLORS[j];
    exports[bg] = eval(bg);
    for (i = k = 1; k <= 8; i = ++k) {
        exports[bg + i] = B256(exports[bg](i));
    }
}

for (l = 0, len1 = FG_COLORS.length; l < len1; l++) {
    fg = FG_COLORS[l];
    exports[fg] = eval(fg);
    for (i = o = 1; o <= 8; i = ++o) {
        exports[fg + i] = F256(exports[fg](i));
    }
}

exports.globalize = function() {
    var len2, n, p, results;
    results = [];
    for (p = 0, len2 = FG_COLORS.length; p < len2; p++) {
        fg = FG_COLORS[p];
        results.push((function() {
            var q, results1;
            results1 = [];
            for (i = q = 1; q <= 8; i = ++q) {
                bg = fg.toUpperCase();
                global[fg + i] = exports[fg + i];
                global[bg + i] = exports[bg + i];
                results1.push((function() {
                    var len3, ref, results2, t;
                    ref = ['underline', 'bold', 'italic', 'inverse'];
                    results2 = [];
                    for (t = 0, len3 = ref.length; t < len3; t++) {
                        n = ref[t];
                        results2.push(global[n] = exports[n]);
                    }
                    return results2;
                })());
            }
            return results1;
        })());
    }
    return results;
};

STRIPANSI = /\x1B[[(?);]{0,2}(;?\d)*./g;

exports.strip = function(s) {
    return s.replace(STRIPANSI, '');
};

if (require.main === module) {
    reset = '\x1b[0m';
    bold = '\x1b[1m';
    for (p = 0, len2 = BG_COLORS.length; p < len2; p++) {
        bg = BG_COLORS[p];
        for (i = q = 1; q <= 8; i = ++q) {
            s = reset;
            fg = bg.toLowerCase();
            s += module.exports[fg + i]((fg + i) + " " + (bg + i) + " ");
            for (t = 0, len3 = FG_COLORS.length; t < len3; t++) {
                fg = FG_COLORS[t];
                s += module.exports[bg + i](module.exports[fg + (9 - i)](' ' + fg + ' '));
            }
            console.log(s + reset);
        }
    }
    console.log(" ");
}

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/kolor.coffee